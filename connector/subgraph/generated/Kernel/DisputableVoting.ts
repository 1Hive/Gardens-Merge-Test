// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewSetting extends ethereum.Event {
  get params(): NewSetting__Params {
    return new NewSetting__Params(this);
  }
}

export class NewSetting__Params {
  _event: NewSetting;

  constructor(event: NewSetting) {
    this._event = event;
  }

  get settingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangeVoteTime extends ethereum.Event {
  get params(): ChangeVoteTime__Params {
    return new ChangeVoteTime__Params(this);
  }
}

export class ChangeVoteTime__Params {
  _event: ChangeVoteTime;

  constructor(event: ChangeVoteTime) {
    this._event = event;
  }

  get voteTime(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangeSupportRequired extends ethereum.Event {
  get params(): ChangeSupportRequired__Params {
    return new ChangeSupportRequired__Params(this);
  }
}

export class ChangeSupportRequired__Params {
  _event: ChangeSupportRequired;

  constructor(event: ChangeSupportRequired) {
    this._event = event;
  }

  get supportRequiredPct(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangeMinQuorum extends ethereum.Event {
  get params(): ChangeMinQuorum__Params {
    return new ChangeMinQuorum__Params(this);
  }
}

export class ChangeMinQuorum__Params {
  _event: ChangeMinQuorum;

  constructor(event: ChangeMinQuorum) {
    this._event = event;
  }

  get minAcceptQuorumPct(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangeDelegatedVotingPeriod extends ethereum.Event {
  get params(): ChangeDelegatedVotingPeriod__Params {
    return new ChangeDelegatedVotingPeriod__Params(this);
  }
}

export class ChangeDelegatedVotingPeriod__Params {
  _event: ChangeDelegatedVotingPeriod;

  constructor(event: ChangeDelegatedVotingPeriod) {
    this._event = event;
  }

  get delegatedVotingPeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangeQuietEndingConfiguration extends ethereum.Event {
  get params(): ChangeQuietEndingConfiguration__Params {
    return new ChangeQuietEndingConfiguration__Params(this);
  }
}

export class ChangeQuietEndingConfiguration__Params {
  _event: ChangeQuietEndingConfiguration;

  constructor(event: ChangeQuietEndingConfiguration) {
    this._event = event;
  }

  get quietEndingPeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get quietEndingExtension(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ChangeExecutionDelay extends ethereum.Event {
  get params(): ChangeExecutionDelay__Params {
    return new ChangeExecutionDelay__Params(this);
  }
}

export class ChangeExecutionDelay__Params {
  _event: ChangeExecutionDelay;

  constructor(event: ChangeExecutionDelay) {
    this._event = event;
  }

  get executionDelay(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class StartVote extends ethereum.Event {
  get params(): StartVote__Params {
    return new StartVote__Params(this);
  }
}

export class StartVote__Params {
  _event: StartVote;

  constructor(event: StartVote) {
    this._event = event;
  }

  get voteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get context(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get executionScript(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class PauseVote extends ethereum.Event {
  get params(): PauseVote__Params {
    return new PauseVote__Params(this);
  }
}

export class PauseVote__Params {
  _event: PauseVote;

  constructor(event: PauseVote) {
    this._event = event;
  }

  get voteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get challengeId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ResumeVote extends ethereum.Event {
  get params(): ResumeVote__Params {
    return new ResumeVote__Params(this);
  }
}

export class ResumeVote__Params {
  _event: ResumeVote;

  constructor(event: ResumeVote) {
    this._event = event;
  }

  get voteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CancelVote extends ethereum.Event {
  get params(): CancelVote__Params {
    return new CancelVote__Params(this);
  }
}

export class CancelVote__Params {
  _event: CancelVote;

  constructor(event: CancelVote) {
    this._event = event;
  }

  get voteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ExecuteVote extends ethereum.Event {
  get params(): ExecuteVote__Params {
    return new ExecuteVote__Params(this);
  }
}

export class ExecuteVote__Params {
  _event: ExecuteVote;

  constructor(event: ExecuteVote) {
    this._event = event;
  }

  get voteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class QuietEndingExtendVote extends ethereum.Event {
  get params(): QuietEndingExtendVote__Params {
    return new QuietEndingExtendVote__Params(this);
  }
}

export class QuietEndingExtendVote__Params {
  _event: QuietEndingExtendVote;

  constructor(event: QuietEndingExtendVote) {
    this._event = event;
  }

  get voteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get passing(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class CastVote extends ethereum.Event {
  get params(): CastVote__Params {
    return new CastVote__Params(this);
  }
}

export class CastVote__Params {
  _event: CastVote;

  constructor(event: CastVote) {
    this._event = event;
  }

  get voteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get supports(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get caster(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class ChangeRepresentative extends ethereum.Event {
  get params(): ChangeRepresentative__Params {
    return new ChangeRepresentative__Params(this);
  }
}

export class ChangeRepresentative__Params {
  _event: ChangeRepresentative;

  constructor(event: ChangeRepresentative) {
    this._event = event;
  }

  get voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get representative(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProxyVoteFailure extends ethereum.Event {
  get params(): ProxyVoteFailure__Params {
    return new ProxyVoteFailure__Params(this);
  }
}

export class ProxyVoteFailure__Params {
  _event: ProxyVoteFailure;

  constructor(event: ProxyVoteFailure) {
    this._event = event;
  }

  get voteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get representative(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ScriptResult extends ethereum.Event {
  get params(): ScriptResult__Params {
    return new ScriptResult__Params(this);
  }
}

export class ScriptResult__Params {
  _event: ScriptResult;

  constructor(event: ScriptResult) {
    this._event = event;
  }

  get executor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get script(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get input(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get returnData(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class RecoverToVault extends ethereum.Event {
  get params(): RecoverToVault__Params {
    return new RecoverToVault__Params(this);
  }
}

export class RecoverToVault__Params {
  _event: RecoverToVault;

  constructor(event: RecoverToVault) {
    this._event = event;
  }

  get vault(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AgreementSet extends ethereum.Event {
  get params(): AgreementSet__Params {
    return new AgreementSet__Params(this);
  }
}

export class AgreementSet__Params {
  _event: AgreementSet;

  constructor(event: AgreementSet) {
    this._event = event;
  }

  get agreement(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DisputableVoting__getSettingResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }
}

export class DisputableVoting__getVoteResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: i32;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;
  value10: BigInt;
  value11: i32;
  value12: Bytes;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: i32,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
    value10: BigInt,
    value11: i32,
    value12: Bytes
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set(
      "value5",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value5))
    );
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    map.set(
      "value11",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value11))
    );
    map.set("value12", ethereum.Value.fromFixedBytes(this.value12));
    return map;
  }
}

export class DisputableVoting__getCastVoteResult {
  value0: i32;
  value1: Address;

  constructor(value0: i32, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }
}

export class DisputableVoting extends ethereum.SmartContract {
  static bind(address: Address): DisputableVoting {
    return new DisputableVoting("DisputableVoting", address);
  }

  CHANGE_VOTE_TIME_ROLE(): Bytes {
    let result = super.call(
      "CHANGE_VOTE_TIME_ROLE",
      "CHANGE_VOTE_TIME_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_CHANGE_VOTE_TIME_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CHANGE_VOTE_TIME_ROLE",
      "CHANGE_VOTE_TIME_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasInitialized(): boolean {
    let result = super.call("hasInitialized", "hasInitialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_hasInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasInitialized", "hasInitialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  newVote(_executionScript: Bytes, _context: Bytes): BigInt {
    let result = super.call("newVote", "newVote(bytes,bytes):(uint256)", [
      ethereum.Value.fromBytes(_executionScript),
      ethereum.Value.fromBytes(_context)
    ]);

    return result[0].toBigInt();
  }

  try_newVote(
    _executionScript: Bytes,
    _context: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall("newVote", "newVote(bytes,bytes):(uint256)", [
      ethereum.Value.fromBytes(_executionScript),
      ethereum.Value.fromBytes(_context)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isVoteOpenForVoting(_voteId: BigInt): boolean {
    let result = super.call(
      "isVoteOpenForVoting",
      "isVoteOpenForVoting(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_voteId)]
    );

    return result[0].toBoolean();
  }

  try_isVoteOpenForVoting(_voteId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isVoteOpenForVoting",
      "isVoteOpenForVoting(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_voteId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  MAX_VOTES_DELEGATION_SET_LENGTH(): BigInt {
    let result = super.call(
      "MAX_VOTES_DELEGATION_SET_LENGTH",
      "MAX_VOTES_DELEGATION_SET_LENGTH():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_VOTES_DELEGATION_SET_LENGTH(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_VOTES_DELEGATION_SET_LENGTH",
      "MAX_VOTES_DELEGATION_SET_LENGTH():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getEVMScriptExecutor(_script: Bytes): Address {
    let result = super.call(
      "getEVMScriptExecutor",
      "getEVMScriptExecutor(bytes):(address)",
      [ethereum.Value.fromBytes(_script)]
    );

    return result[0].toAddress();
  }

  try_getEVMScriptExecutor(_script: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getEVMScriptExecutor",
      "getEVMScriptExecutor(bytes):(address)",
      [ethereum.Value.fromBytes(_script)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRecoveryVault(): Address {
    let result = super.call(
      "getRecoveryVault",
      "getRecoveryVault():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getRecoveryVault(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRecoveryVault",
      "getRecoveryVault():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getSetting(_settingId: BigInt): DisputableVoting__getSettingResult {
    let result = super.call(
      "getSetting",
      "getSetting(uint256):(uint64,uint64,uint64,uint64,uint64,uint64,uint64)",
      [ethereum.Value.fromUnsignedBigInt(_settingId)]
    );

    return new DisputableVoting__getSettingResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt()
    );
  }

  try_getSetting(
    _settingId: BigInt
  ): ethereum.CallResult<DisputableVoting__getSettingResult> {
    let result = super.tryCall(
      "getSetting",
      "getSetting(uint256):(uint64,uint64,uint64,uint64,uint64,uint64,uint64)",
      [ethereum.Value.fromUnsignedBigInt(_settingId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DisputableVoting__getSettingResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt()
      )
    );
  }

  settingsLength(): BigInt {
    let result = super.call("settingsLength", "settingsLength():(uint256)", []);

    return result[0].toBigInt();
  }

  try_settingsLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "settingsLength",
      "settingsLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  CHANGE_EXECUTION_DELAY_ROLE(): Bytes {
    let result = super.call(
      "CHANGE_EXECUTION_DELAY_ROLE",
      "CHANGE_EXECUTION_DELAY_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_CHANGE_EXECUTION_DELAY_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CHANGE_EXECUTION_DELAY_ROLE",
      "CHANGE_EXECUTION_DELAY_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  forwarderType(): i32 {
    let result = super.call("forwarderType", "forwarderType():(uint8)", []);

    return result[0].toI32();
  }

  try_forwarderType(): ethereum.CallResult<i32> {
    let result = super.tryCall("forwarderType", "forwarderType():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getVote(_voteId: BigInt): DisputableVoting__getVoteResult {
    let result = super.call(
      "getVote",
      "getVote(uint256):(uint256,uint256,uint256,uint64,uint64,uint8,uint256,uint256,uint64,uint64,uint64,uint8,bytes32)",
      [ethereum.Value.fromUnsignedBigInt(_voteId)]
    );

    return new DisputableVoting__getVoteResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toI32(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toBigInt(),
      result[11].toI32(),
      result[12].toBytes()
    );
  }

  try_getVote(
    _voteId: BigInt
  ): ethereum.CallResult<DisputableVoting__getVoteResult> {
    let result = super.tryCall(
      "getVote",
      "getVote(uint256):(uint256,uint256,uint256,uint64,uint64,uint8,uint256,uint256,uint64,uint64,uint64,uint8,bytes32)",
      [ethereum.Value.fromUnsignedBigInt(_voteId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DisputableVoting__getVoteResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toI32(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toBigInt(),
        value[11].toI32(),
        value[12].toBytes()
      )
    );
  }

  CHANGE_SUPPORT_ROLE(): Bytes {
    let result = super.call(
      "CHANGE_SUPPORT_ROLE",
      "CHANGE_SUPPORT_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_CHANGE_SUPPORT_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CHANGE_SUPPORT_ROLE",
      "CHANGE_SUPPORT_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  canChallenge(_voteId: BigInt): boolean {
    let result = super.call("canChallenge", "canChallenge(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_voteId)
    ]);

    return result[0].toBoolean();
  }

  try_canChallenge(_voteId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("canChallenge", "canChallenge(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_voteId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  canClose(_voteId: BigInt): boolean {
    let result = super.call("canClose", "canClose(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_voteId)
    ]);

    return result[0].toBoolean();
  }

  try_canClose(_voteId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("canClose", "canClose(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_voteId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  CHANGE_DELEGATED_VOTING_PERIOD_ROLE(): Bytes {
    let result = super.call(
      "CHANGE_DELEGATED_VOTING_PERIOD_ROLE",
      "CHANGE_DELEGATED_VOTING_PERIOD_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_CHANGE_DELEGATED_VOTING_PERIOD_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CHANGE_DELEGATED_VOTING_PERIOD_ROLE",
      "CHANGE_DELEGATED_VOTING_PERIOD_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  allowRecoverability(token: Address): boolean {
    let result = super.call(
      "allowRecoverability",
      "allowRecoverability(address):(bool)",
      [ethereum.Value.fromAddress(token)]
    );

    return result[0].toBoolean();
  }

  try_allowRecoverability(token: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "allowRecoverability",
      "allowRecoverability(address):(bool)",
      [ethereum.Value.fromAddress(token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  appId(): Bytes {
    let result = super.call("appId", "appId():(bytes32)", []);

    return result[0].toBytes();
  }

  try_appId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("appId", "appId():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  canVoteOnBehalfOf(
    _voteId: BigInt,
    _voters: Array<Address>,
    _representative: Address
  ): boolean {
    let result = super.call(
      "canVoteOnBehalfOf",
      "canVoteOnBehalfOf(uint256,address[],address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_voteId),
        ethereum.Value.fromAddressArray(_voters),
        ethereum.Value.fromAddress(_representative)
      ]
    );

    return result[0].toBoolean();
  }

  try_canVoteOnBehalfOf(
    _voteId: BigInt,
    _voters: Array<Address>,
    _representative: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canVoteOnBehalfOf",
      "canVoteOnBehalfOf(uint256,address[],address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_voteId),
        ethereum.Value.fromAddressArray(_voters),
        ethereum.Value.fromAddress(_representative)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  CHANGE_QUIET_ENDING_ROLE(): Bytes {
    let result = super.call(
      "CHANGE_QUIET_ENDING_ROLE",
      "CHANGE_QUIET_ENDING_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_CHANGE_QUIET_ENDING_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CHANGE_QUIET_ENDING_ROLE",
      "CHANGE_QUIET_ENDING_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getInitializationBlock(): BigInt {
    let result = super.call(
      "getInitializationBlock",
      "getInitializationBlock():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getInitializationBlock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getInitializationBlock",
      "getInitializationBlock():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  CHALLENGE_ROLE(): Bytes {
    let result = super.call("CHALLENGE_ROLE", "CHALLENGE_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_CHALLENGE_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CHALLENGE_ROLE",
      "CHALLENGE_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  isRepresentativeOf(_voter: Address, _representative: Address): boolean {
    let result = super.call(
      "isRepresentativeOf",
      "isRepresentativeOf(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_voter),
        ethereum.Value.fromAddress(_representative)
      ]
    );

    return result[0].toBoolean();
  }

  try_isRepresentativeOf(
    _voter: Address,
    _representative: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isRepresentativeOf",
      "isRepresentativeOf(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_voter),
        ethereum.Value.fromAddress(_representative)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  CHANGE_QUORUM_ROLE(): Bytes {
    let result = super.call(
      "CHANGE_QUORUM_ROLE",
      "CHANGE_QUORUM_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_CHANGE_QUORUM_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CHANGE_QUORUM_ROLE",
      "CHANGE_QUORUM_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getCastVote(
    _voteId: BigInt,
    _voter: Address
  ): DisputableVoting__getCastVoteResult {
    let result = super.call(
      "getCastVote",
      "getCastVote(uint256,address):(uint8,address)",
      [
        ethereum.Value.fromUnsignedBigInt(_voteId),
        ethereum.Value.fromAddress(_voter)
      ]
    );

    return new DisputableVoting__getCastVoteResult(
      result[0].toI32(),
      result[1].toAddress()
    );
  }

  try_getCastVote(
    _voteId: BigInt,
    _voter: Address
  ): ethereum.CallResult<DisputableVoting__getCastVoteResult> {
    let result = super.tryCall(
      "getCastVote",
      "getCastVote(uint256,address):(uint8,address)",
      [
        ethereum.Value.fromUnsignedBigInt(_voteId),
        ethereum.Value.fromAddress(_voter)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DisputableVoting__getCastVoteResult(
        value[0].toI32(),
        value[1].toAddress()
      )
    );
  }

  canPerform(_sender: Address, _role: Bytes, _params: Array<BigInt>): boolean {
    let result = super.call(
      "canPerform",
      "canPerform(address,bytes32,uint256[]):(bool)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromFixedBytes(_role),
        ethereum.Value.fromUnsignedBigIntArray(_params)
      ]
    );

    return result[0].toBoolean();
  }

  try_canPerform(
    _sender: Address,
    _role: Bytes,
    _params: Array<BigInt>
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canPerform",
      "canPerform(address,bytes32,uint256[]):(bool)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromFixedBytes(_role),
        ethereum.Value.fromUnsignedBigIntArray(_params)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getEVMScriptRegistry(): Address {
    let result = super.call(
      "getEVMScriptRegistry",
      "getEVMScriptRegistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getEVMScriptRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getEVMScriptRegistry",
      "getEVMScriptRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  canRepresentativesVote(_voteId: BigInt): boolean {
    let result = super.call(
      "canRepresentativesVote",
      "canRepresentativesVote(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_voteId)]
    );

    return result[0].toBoolean();
  }

  try_canRepresentativesVote(_voteId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canRepresentativesVote",
      "canRepresentativesVote(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_voteId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getAgreement(): Address {
    let result = super.call("getAgreement", "getAgreement():(address)", []);

    return result[0].toAddress();
  }

  try_getAgreement(): ethereum.CallResult<Address> {
    let result = super.tryCall("getAgreement", "getAgreement():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  CREATE_VOTES_ROLE(): Bytes {
    let result = super.call(
      "CREATE_VOTES_ROLE",
      "CREATE_VOTES_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_CREATE_VOTES_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CREATE_VOTES_ROLE",
      "CREATE_VOTES_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  canForward(_sender: Address, _evmScript: Bytes): boolean {
    let result = super.call("canForward", "canForward(address,bytes):(bool)", [
      ethereum.Value.fromAddress(_sender),
      ethereum.Value.fromBytes(_evmScript)
    ]);

    return result[0].toBoolean();
  }

  try_canForward(
    _sender: Address,
    _evmScript: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canForward",
      "canForward(address,bytes):(bool)",
      [
        ethereum.Value.fromAddress(_sender),
        ethereum.Value.fromBytes(_evmScript)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  canExecute(_voteId: BigInt): boolean {
    let result = super.call("canExecute", "canExecute(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_voteId)
    ]);

    return result[0].toBoolean();
  }

  try_canExecute(_voteId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("canExecute", "canExecute(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_voteId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  canVote(_voteId: BigInt, _voter: Address): boolean {
    let result = super.call("canVote", "canVote(uint256,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_voteId),
      ethereum.Value.fromAddress(_voter)
    ]);

    return result[0].toBoolean();
  }

  try_canVote(_voteId: BigInt, _voter: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("canVote", "canVote(uint256,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_voteId),
      ethereum.Value.fromAddress(_voter)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  SET_AGREEMENT_ROLE(): Bytes {
    let result = super.call(
      "SET_AGREEMENT_ROLE",
      "SET_AGREEMENT_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_SET_AGREEMENT_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "SET_AGREEMENT_ROLE",
      "SET_AGREEMENT_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  kernel(): Address {
    let result = super.call("kernel", "kernel():(address)", []);

    return result[0].toAddress();
  }

  try_kernel(): ethereum.CallResult<Address> {
    let result = super.tryCall("kernel", "kernel():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isPetrified(): boolean {
    let result = super.call("isPetrified", "isPetrified():(bool)", []);

    return result[0].toBoolean();
  }

  try_isPetrified(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPetrified", "isPetrified():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  votesLength(): BigInt {
    let result = super.call("votesLength", "votesLength():(uint256)", []);

    return result[0].toBigInt();
  }

  try_votesLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("votesLength", "votesLength():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  PCT_BASE(): BigInt {
    let result = super.call("PCT_BASE", "PCT_BASE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_PCT_BASE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("PCT_BASE", "PCT_BASE():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isForwarder(): boolean {
    let result = super.call("isForwarder", "isForwarder():(bool)", []);

    return result[0].toBoolean();
  }

  try_isForwarder(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isForwarder", "isForwarder():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class NewVoteCall extends ethereum.Call {
  get inputs(): NewVoteCall__Inputs {
    return new NewVoteCall__Inputs(this);
  }

  get outputs(): NewVoteCall__Outputs {
    return new NewVoteCall__Outputs(this);
  }
}

export class NewVoteCall__Inputs {
  _call: NewVoteCall;

  constructor(call: NewVoteCall) {
    this._call = call;
  }

  get _executionScript(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _context(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class NewVoteCall__Outputs {
  _call: NewVoteCall;

  constructor(call: NewVoteCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SetAgreementCall extends ethereum.Call {
  get inputs(): SetAgreementCall__Inputs {
    return new SetAgreementCall__Inputs(this);
  }

  get outputs(): SetAgreementCall__Outputs {
    return new SetAgreementCall__Outputs(this);
  }
}

export class SetAgreementCall__Inputs {
  _call: SetAgreementCall;

  constructor(call: SetAgreementCall) {
    this._call = call;
  }

  get _agreement(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAgreementCall__Outputs {
  _call: SetAgreementCall;

  constructor(call: SetAgreementCall) {
    this._call = call;
  }
}

export class ChangeQuietEndingConfigurationCall extends ethereum.Call {
  get inputs(): ChangeQuietEndingConfigurationCall__Inputs {
    return new ChangeQuietEndingConfigurationCall__Inputs(this);
  }

  get outputs(): ChangeQuietEndingConfigurationCall__Outputs {
    return new ChangeQuietEndingConfigurationCall__Outputs(this);
  }
}

export class ChangeQuietEndingConfigurationCall__Inputs {
  _call: ChangeQuietEndingConfigurationCall;

  constructor(call: ChangeQuietEndingConfigurationCall) {
    this._call = call;
  }

  get _quietEndingPeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _quietEndingExtension(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ChangeQuietEndingConfigurationCall__Outputs {
  _call: ChangeQuietEndingConfigurationCall;

  constructor(call: ChangeQuietEndingConfigurationCall) {
    this._call = call;
  }
}

export class SetRepresentativeCall extends ethereum.Call {
  get inputs(): SetRepresentativeCall__Inputs {
    return new SetRepresentativeCall__Inputs(this);
  }

  get outputs(): SetRepresentativeCall__Outputs {
    return new SetRepresentativeCall__Outputs(this);
  }
}

export class SetRepresentativeCall__Inputs {
  _call: SetRepresentativeCall;

  constructor(call: SetRepresentativeCall) {
    this._call = call;
  }

  get _representative(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRepresentativeCall__Outputs {
  _call: SetRepresentativeCall;

  constructor(call: SetRepresentativeCall) {
    this._call = call;
  }
}

export class ForwardCall extends ethereum.Call {
  get inputs(): ForwardCall__Inputs {
    return new ForwardCall__Inputs(this);
  }

  get outputs(): ForwardCall__Outputs {
    return new ForwardCall__Outputs(this);
  }
}

export class ForwardCall__Inputs {
  _call: ForwardCall;

  constructor(call: ForwardCall) {
    this._call = call;
  }

  get _evmScript(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _context(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ForwardCall__Outputs {
  _call: ForwardCall;

  constructor(call: ForwardCall) {
    this._call = call;
  }
}

export class ChangeMinAcceptQuorumPctCall extends ethereum.Call {
  get inputs(): ChangeMinAcceptQuorumPctCall__Inputs {
    return new ChangeMinAcceptQuorumPctCall__Inputs(this);
  }

  get outputs(): ChangeMinAcceptQuorumPctCall__Outputs {
    return new ChangeMinAcceptQuorumPctCall__Outputs(this);
  }
}

export class ChangeMinAcceptQuorumPctCall__Inputs {
  _call: ChangeMinAcceptQuorumPctCall;

  constructor(call: ChangeMinAcceptQuorumPctCall) {
    this._call = call;
  }

  get _minAcceptQuorumPct(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeMinAcceptQuorumPctCall__Outputs {
  _call: ChangeMinAcceptQuorumPctCall;

  constructor(call: ChangeMinAcceptQuorumPctCall) {
    this._call = call;
  }
}

export class ChangeExecutionDelayCall extends ethereum.Call {
  get inputs(): ChangeExecutionDelayCall__Inputs {
    return new ChangeExecutionDelayCall__Inputs(this);
  }

  get outputs(): ChangeExecutionDelayCall__Outputs {
    return new ChangeExecutionDelayCall__Outputs(this);
  }
}

export class ChangeExecutionDelayCall__Inputs {
  _call: ChangeExecutionDelayCall;

  constructor(call: ChangeExecutionDelayCall) {
    this._call = call;
  }

  get _executionDelay(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeExecutionDelayCall__Outputs {
  _call: ChangeExecutionDelayCall;

  constructor(call: ChangeExecutionDelayCall) {
    this._call = call;
  }
}

export class VoteOnBehalfOfCall extends ethereum.Call {
  get inputs(): VoteOnBehalfOfCall__Inputs {
    return new VoteOnBehalfOfCall__Inputs(this);
  }

  get outputs(): VoteOnBehalfOfCall__Outputs {
    return new VoteOnBehalfOfCall__Outputs(this);
  }
}

export class VoteOnBehalfOfCall__Inputs {
  _call: VoteOnBehalfOfCall;

  constructor(call: VoteOnBehalfOfCall) {
    this._call = call;
  }

  get _voteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _supports(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get _voters(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class VoteOnBehalfOfCall__Outputs {
  _call: VoteOnBehalfOfCall;

  constructor(call: VoteOnBehalfOfCall) {
    this._call = call;
  }
}

export class OnDisputableActionAllowedCall extends ethereum.Call {
  get inputs(): OnDisputableActionAllowedCall__Inputs {
    return new OnDisputableActionAllowedCall__Inputs(this);
  }

  get outputs(): OnDisputableActionAllowedCall__Outputs {
    return new OnDisputableActionAllowedCall__Outputs(this);
  }
}

export class OnDisputableActionAllowedCall__Inputs {
  _call: OnDisputableActionAllowedCall;

  constructor(call: OnDisputableActionAllowedCall) {
    this._call = call;
  }

  get _disputableActionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OnDisputableActionAllowedCall__Outputs {
  _call: OnDisputableActionAllowedCall;

  constructor(call: OnDisputableActionAllowedCall) {
    this._call = call;
  }
}

export class ChangeSupportRequiredPctCall extends ethereum.Call {
  get inputs(): ChangeSupportRequiredPctCall__Inputs {
    return new ChangeSupportRequiredPctCall__Inputs(this);
  }

  get outputs(): ChangeSupportRequiredPctCall__Outputs {
    return new ChangeSupportRequiredPctCall__Outputs(this);
  }
}

export class ChangeSupportRequiredPctCall__Inputs {
  _call: ChangeSupportRequiredPctCall;

  constructor(call: ChangeSupportRequiredPctCall) {
    this._call = call;
  }

  get _supportRequiredPct(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeSupportRequiredPctCall__Outputs {
  _call: ChangeSupportRequiredPctCall;

  constructor(call: ChangeSupportRequiredPctCall) {
    this._call = call;
  }
}

export class OnDisputableActionChallengedCall extends ethereum.Call {
  get inputs(): OnDisputableActionChallengedCall__Inputs {
    return new OnDisputableActionChallengedCall__Inputs(this);
  }

  get outputs(): OnDisputableActionChallengedCall__Outputs {
    return new OnDisputableActionChallengedCall__Outputs(this);
  }
}

export class OnDisputableActionChallengedCall__Inputs {
  _call: OnDisputableActionChallengedCall;

  constructor(call: OnDisputableActionChallengedCall) {
    this._call = call;
  }

  get _disputableActionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _challengeId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _challenger(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class OnDisputableActionChallengedCall__Outputs {
  _call: OnDisputableActionChallengedCall;

  constructor(call: OnDisputableActionChallengedCall) {
    this._call = call;
  }
}

export class ExecuteVoteCall extends ethereum.Call {
  get inputs(): ExecuteVoteCall__Inputs {
    return new ExecuteVoteCall__Inputs(this);
  }

  get outputs(): ExecuteVoteCall__Outputs {
    return new ExecuteVoteCall__Outputs(this);
  }
}

export class ExecuteVoteCall__Inputs {
  _call: ExecuteVoteCall;

  constructor(call: ExecuteVoteCall) {
    this._call = call;
  }

  get _voteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _executionScript(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ExecuteVoteCall__Outputs {
  _call: ExecuteVoteCall;

  constructor(call: ExecuteVoteCall) {
    this._call = call;
  }
}

export class TransferToVaultCall extends ethereum.Call {
  get inputs(): TransferToVaultCall__Inputs {
    return new TransferToVaultCall__Inputs(this);
  }

  get outputs(): TransferToVaultCall__Outputs {
    return new TransferToVaultCall__Outputs(this);
  }
}

export class TransferToVaultCall__Inputs {
  _call: TransferToVaultCall;

  constructor(call: TransferToVaultCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferToVaultCall__Outputs {
  _call: TransferToVaultCall;

  constructor(call: TransferToVaultCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _voteTime(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _supportRequiredPct(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _minAcceptQuorumPct(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _delegatedVotingPeriod(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _quietEndingPeriod(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _quietEndingExtension(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _executionDelay(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OnDisputableActionVoidedCall extends ethereum.Call {
  get inputs(): OnDisputableActionVoidedCall__Inputs {
    return new OnDisputableActionVoidedCall__Inputs(this);
  }

  get outputs(): OnDisputableActionVoidedCall__Outputs {
    return new OnDisputableActionVoidedCall__Outputs(this);
  }
}

export class OnDisputableActionVoidedCall__Inputs {
  _call: OnDisputableActionVoidedCall;

  constructor(call: OnDisputableActionVoidedCall) {
    this._call = call;
  }

  get _disputableActionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OnDisputableActionVoidedCall__Outputs {
  _call: OnDisputableActionVoidedCall;

  constructor(call: OnDisputableActionVoidedCall) {
    this._call = call;
  }
}

export class ChangeDelegatedVotingPeriodCall extends ethereum.Call {
  get inputs(): ChangeDelegatedVotingPeriodCall__Inputs {
    return new ChangeDelegatedVotingPeriodCall__Inputs(this);
  }

  get outputs(): ChangeDelegatedVotingPeriodCall__Outputs {
    return new ChangeDelegatedVotingPeriodCall__Outputs(this);
  }
}

export class ChangeDelegatedVotingPeriodCall__Inputs {
  _call: ChangeDelegatedVotingPeriodCall;

  constructor(call: ChangeDelegatedVotingPeriodCall) {
    this._call = call;
  }

  get _delegatedVotingPeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeDelegatedVotingPeriodCall__Outputs {
  _call: ChangeDelegatedVotingPeriodCall;

  constructor(call: ChangeDelegatedVotingPeriodCall) {
    this._call = call;
  }
}

export class ChangeVoteTimeCall extends ethereum.Call {
  get inputs(): ChangeVoteTimeCall__Inputs {
    return new ChangeVoteTimeCall__Inputs(this);
  }

  get outputs(): ChangeVoteTimeCall__Outputs {
    return new ChangeVoteTimeCall__Outputs(this);
  }
}

export class ChangeVoteTimeCall__Inputs {
  _call: ChangeVoteTimeCall;

  constructor(call: ChangeVoteTimeCall) {
    this._call = call;
  }

  get _voteTime(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeVoteTimeCall__Outputs {
  _call: ChangeVoteTimeCall;

  constructor(call: ChangeVoteTimeCall) {
    this._call = call;
  }
}

export class VoteCall extends ethereum.Call {
  get inputs(): VoteCall__Inputs {
    return new VoteCall__Inputs(this);
  }

  get outputs(): VoteCall__Outputs {
    return new VoteCall__Outputs(this);
  }
}

export class VoteCall__Inputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }

  get _voteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _supports(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class VoteCall__Outputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }
}

export class OnDisputableActionRejectedCall extends ethereum.Call {
  get inputs(): OnDisputableActionRejectedCall__Inputs {
    return new OnDisputableActionRejectedCall__Inputs(this);
  }

  get outputs(): OnDisputableActionRejectedCall__Outputs {
    return new OnDisputableActionRejectedCall__Outputs(this);
  }
}

export class OnDisputableActionRejectedCall__Inputs {
  _call: OnDisputableActionRejectedCall;

  constructor(call: OnDisputableActionRejectedCall) {
    this._call = call;
  }

  get _disputableActionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OnDisputableActionRejectedCall__Outputs {
  _call: OnDisputableActionRejectedCall;

  constructor(call: OnDisputableActionRejectedCall) {
    this._call = call;
  }
}
